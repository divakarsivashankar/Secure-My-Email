// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Wax API (wax/v1)
// Generated from:
//   Version: v1
//   Revision: 20130321
// Generated by:
//    Tool: google-apis-code-generator 1.5.1
//     C++: 0.1.3
#ifndef  GOOGLE_WAX_API_WAX_CREATE_SESSION_REQUEST_H_
#define  GOOGLE_WAX_API_WAX_CREATE_SESSION_REQUEST_H_

#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/base/macros.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

namespace Json {
class Value;
}  // namespace Json

namespace google_wax_api {
using namespace googleapis;

/**
 * No description provided.
 *
 * @ingroup DataObject
 */
class WaxCreateSessionRequest : public client::JsonCppData {
 public:
  /**
   * Creates a new default instance.
   *
   * @return Ownership is passed back to the caller.
   */
  static WaxCreateSessionRequest* New();

  /**
   * Standard constructor for an immutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit WaxCreateSessionRequest(const Json::Value& storage);

  /**
   * Standard constructor for a mutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit WaxCreateSessionRequest(Json::Value* storage);

  /**
   * Standard destructor.
   */
  virtual ~WaxCreateSessionRequest();

  /**
   * Returns a string denoting the type of this data object.
   *
   * @return <code>google_wax_api::WaxCreateSessionRequest</code>
   */
  const StringPiece GetTypeName() const {
    return StringPiece("google_wax_api::WaxCreateSessionRequest");
  }

  /**
   * Determine if the '<code>durationInMillis</code>' attribute was set.
   *
   * @return true if the '<code>durationInMillis</code>' attribute was set.
   */
  bool has_duration_in_millis() const {
    return Storage().isMember("durationInMillis");
  }

  /**
   * Clears the '<code>durationInMillis</code>' attribute.
   */
  void clear_duration_in_millis() {
    MutableStorage()->removeMember("durationInMillis");
  }


  /**
   * Get the value of the '<code>durationInMillis</code>' attribute.
   */
  int64 get_duration_in_millis() const {
    const Json::Value& storage = Storage("durationInMillis");
    return client::JsonValueToCppValueHelper<int64 >(storage);
  }

  /**
   * Change the '<code>durationInMillis</code>' attribute.
   *
   * Session duration in milliseconds.
   *
   * @param[in] value The new value.
   */
  void set_duration_in_millis(int64 value) {
    client::SetJsonValueFromCppValueHelper<int64 >(
      value, MutableStorage("durationInMillis"));
  }

  /**
   * Determine if the '<code>sessionName</code>' attribute was set.
   *
   * @return true if the '<code>sessionName</code>' attribute was set.
   */
  bool has_session_name() const {
    return Storage().isMember("sessionName");
  }

  /**
   * Clears the '<code>sessionName</code>' attribute.
   */
  void clear_session_name() {
    MutableStorage()->removeMember("sessionName");
  }


  /**
   * Get the value of the '<code>sessionName</code>' attribute.
   */
  const StringPiece get_session_name() const {
    const Json::Value& v = Storage("sessionName");
    if (v == Json::Value::null) return StringPiece("");
    return StringPiece(v.asCString());
  }

  /**
   * Change the '<code>sessionName</code>' attribute.
   *
   * Usually a short, human-readable name that describes a session. This name
   * will appear as part of the session ID, which is generated by the API when
   * the session is created.
   *
   * @param[in] value The new value.
   */
  void set_session_name(const StringPiece& value) {
    *MutableStorage("sessionName") = value.data();
  }

 private:
  void operator=(const WaxCreateSessionRequest&);
};  // WaxCreateSessionRequest
}  // namespace google_wax_api
#endif  // GOOGLE_WAX_API_WAX_CREATE_SESSION_REQUEST_H_
